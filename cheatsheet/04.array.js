// *forEach(https://clck.ru/LpiTt)
// Метод forEach() выполняет указанную функцию один раз для каждого элемента в массиве.
// Возвращаемое значение - undefined
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *Map(https://clck.ru/PWa8n)
// Метод map() создаёт новый массив с результатом вызова указанной функции для каждого элемента массива.
// Возвращаемое значение -  Новый массив, где каждый элемент является результатом callback функции.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* filter*(https://clck.ru/XRuiJ)
// Метод filter() создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции.
// Возвращаемое значение - Вернётся новый массив с элементами, которые проходят тест, то есть callback вернёт true. Если ни один элемент не пройдёт тест, то будет возвращён пустой массив.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Reduce(https://clck.ru/XRv7z)
// Метод reduce() применяет функцию reducer к каждому элементу массива (слева-направо), возвращая одно результирующее значение.
// Возвращаемое значение - возвращая результирующее значение. 
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* find(https://clck.ru/XRvDQ)
// Метод find() возвращает значение первого найденного в массиве элемента, которое удовлетворяет условию переданному в callback функции.  В противном случае возвращается undefined.
// Возвращаемое значение - Значение элемента из массива, если элемент прошёл проверку, иначе undefined.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Some(https://clck.ru/XGXRY)
// Метод some() проверяет, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.
// Возвращаемое значение - true, если функция проверки возвращает truthy значение хотя бы для одного элемента массива. Иначе, false
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Push(https://clck.ru/XBr3g)
// Метод push() добавляет один или более элементов в конец массива и возвращает новую длину массива.
// Возвращаемое значение - Новое значение свойства length объекта, для которого был вызван данный метод
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Unshift (https://clck.ru/XBrvb)
// Метод unshift() добавляет один или более элементов в начало массива и возвращает новую длину массива.
// Возвращаемое значение - возвращает новую длину массива.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Shift (https://clck.ru/XBrmx)
// Метод shift() удаляет первый элемент из массива и возвращает его значение. Этот метод изменяет длину массива.
// Возвращаемое значение - Метод shift удаляет элемент по нулевому индексу, сдвигает значения по последовательным индексам вниз, а затем возвращает удалённое значение. Если свойство length массива равно 0, вернётся значение undefined.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Pop (https://clck.ru/XBrhc)
// Метод pop() удаляет последний элемент из массива и возвращает его значение.
// Возвращаемое значение - Последний элемент массива или undefined, если массив пуст.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Slice(https://clck.ru/XBqNG)
// Метод slice() возвращает новый массив, содержащий копию части исходного массива.
// Возвращаемое значение - Новый массив, содержащий извлечённые элементы.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Splice(https://clck.ru/XBrDk)
// Метод splice() изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые.
// Возвращаемое значение - Массив, содержащий удалённые элементы. Если будет удалён только один элемент, вернётся массив из одного элемента. Если никакие элементы не будут удалены, вернётся пустой массив.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Split(https://clck.ru/UgWdZ)
// Метод split() разбивает объект String на массив строк путём разделения строки указанной подстрокой.
// Возвращаемое значение - возвращает новый массив.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *Concat(https://clck.ru/XRvX8)
// Метод concat() возвращает новый массив, состоящий из массива, на котором он был вызван, соединённого с другими массивами и/или значениями, переданными в качестве аргументов.
// Возвращаемое значение - Новый экземпляр Array.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* Reverse(https://clck.ru/XRvZp)
// Метод reverse() на месте обращает порядок следования элементов массива. Первый элемент массива становится последним, а последний — первым.
// Возвращаемое значение - Перевёрнутый массив.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//* join(https://clck.ru/XRvcd)
// Метод join() объединяет все элементы массива (или массивоподобного объекта) в строку.
// Возвращаемое значение - Строка, содержащая все элементы массива. Если arr.length == 0,  то будет возвращена пустая строка.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *indexOf(https://clck.ru/XRvu6)
// Метод indexOf() возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет
// Возвращаемое значение -  возвращает первый индекс
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *findIndex(https://clck.ru/XRw4a)
// Метод findIndex() возвращает индекс в массиве, если элемент удовлетворяет условию проверяющей функции. В противном случае возвращается -1.
// Возвращаемое значение - 
//--------------------------------------------------------------------
//--------------------------------------------------------------------
//*Includes(https://clck.ru/EGBuD)
// Метод includes() определяет, содержит ли массив определённый элемент, возвращая в зависимости от этого true или false.
// Возвращаемое значение - Boolean.

//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *Sort(https://clck.ru/XRwUe)
// Метод sort() на месте сортирует элементы массива и возвращает отсортированный массив. Сортировка не обязательно устойчива (англ.). Порядок сортировки по умолчанию соответствует порядку кодовых точек Unicode.
// Возвращаемое значение - 
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *Flat(https://clck.ru/XcgRF)
// Метод flat() возвращает новый массив, в котором все элементы вложенных подмассивов были рекурсивно "подняты" на указанный уровень depth.
// Возвращаемое значение - Новый массив с объединёнными в него подмассивами.
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// *Replace(https://clck.ru/Xd8sz)
// Метод replace() возвращает новую строку с некоторыми или всеми сопоставлениями с шаблоном, заменёнными на заменитель. Шаблон может быть строкой или регулярным выражением, а заменитель может быть строкой или функцией, вызываемой при каждом сопоставлении.
// Возвращаемое значение - Новая строка с некоторыми или всеми сопоставлениями шаблона, заменёнными на заменитель.
//--------------------------------------------------------------------
//--------------------------------------------------------------------

//--------------------------------------------------------------------
//--------------------------------------------------------------------

//--------------------------------------------------------------------
//--------------------------------------------------------------------

//--------------------------------------------------------------------
//--------------------------------------------------------------------