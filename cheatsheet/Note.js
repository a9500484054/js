// 1.1.16 - убрать консоль лог, так же упростить конструкцию if else можно сразу вернуть условие, создаешь лишние переменные
// 1.1.18 - используй методы массива вместо цикла. Так же не создавай новые переменные, тем более не мутируй входящие данные, можно сразу вернуть результат
// 1.1.19 - используй методы массива для перебора. так же много лишних действий делаешь, можно сократить
// 1.1.21 - используй методы массива для перебора. так же метод toString и replace лишний
// 1.2.2 - не мутируй входящие параметры, можно сразу вернуть результат reduce
// 1.2.7 - используй конструкцию switch case
// 1.2.10 - фильтр не для этого существует. Так же можно использовать map для перебора массива, не нужные значения записать как false значения, и потом фильтром отфильтровать их и сразу вернуть результат
// 1.2.13 - в первой функции создаешь лишние переменные, можно просто через map сделать
// 1.2.15- слишком много всего используешь. Можно создать копию массива и методами pop и unshift его обработать
// 1.2.16- есть метод some
// *1.2.17- можно попробовать упростить


/** 
 * Проверка данных (только Массив и Объект)
 * 
 * 
 * 
 *
 * 
 */


//  Неправильные ответы: 13
//  Выберите правильный синтаксис цикла while:
//  Ваш ответ
//  do while (<условие>) {<код>}
//  Для чего используется оператор «запятая»?
//  Ваш ответ
//  Это не оператор, запятая предназначена для разделения нескольких переменных в одном объявлении var.
//  За что отвечает первый аргумент в методе call?
 
//  Ваш ответ
//  У метода call только один аргумент
 
//  Чему будет равна переменная b после выполнения следующего кода?
//  Ваш ответ
//  4
//  В каком из вариантов приведен правильный синтаксис тернарного оператора («вопросительный знак»)?
//  Ваш ответ
//  if <условное выражение> ? <выражение1> : < выражение2>
//  За что отвечает первый аргумент в методе call?
 
//  Ваш ответ
//  Коллекция параметров для функции avg
 
//  В каком порядке будут загружены и выполнены следующие скрипты?
//  Ваш ответ
//  Зависит от браузера.
//  Можно ли из функции получить доступ к внешним переменным (объявленным за пределами функции)?
//  Ваш ответ
//  Нет
//  Можно ли внутри функции объявлять переменные с помощью var?
//  Ваш ответ
//  Да, при этом такие переменные также будут доступны за пределами функции.
//  Выберите математический оператор, при работе которого в выражении с несколькими переменными будет самый высокий приоритет:
 
//  Ваш ответ
//  =
 
//  Для чего используется конструкция switch?
//  Ваш ответ
//  Для сравнения любой переменной с различными значениями.
//  Чему будет равна переменная a после выполнения следующего кода: var a = 1; a = 2; var a = 3;
//  Ваш ответ
//  Будет ошибка, т.к. два объявления одной и той же переменной не допускаются.
//  Какое действие не характеризует первоклассное выражение?
 
//  Ваш ответ
//  Присвоение значения переменной или свойству


// Неправильные ответы: 22
// Если мы в запросе к серверу передаем параметры в виде JSON, в каком виде может вернуться ответ?
// Ваш ответ
// JSON
// Что означает запись const {name, age, job} = person ?
// Ваш ответ
// Запись некорректная. Будет ошибка Unexpected token =.
// Как вызвать метод класса-родителя для элемента класса-наследника, если метод не переопределен?
// Ваш ответ
// childClassElement.ParentClass.parentMethod(arg1,arg2...)
// Часто встречается такая конструкция:

 

// promise.then(code 1).then(code 2).catch(code 3)

 

// Какие могут быть последовательности исполнения кода?

// Ваш ответ
// code 2, затем code 3
// Что выведется в консоль?

// Ваш ответ
// 18

// Какой формат передачи данных предусмотрен между клиентом и сервером?
// Ваш ответ
// XML или JSON
// Как добавить стиль background-color для найденного элемента?
// Ваш ответ
// style.backgroundColor = value
// Какой тип значения вернет следующая функция:
// Ваш ответ
// number
// Какое высказывание справедливо для классов при наследовании?
// Ваш ответ
// Чтобы при наследовании использовать методы класса-родителя, надо прописать super() в конструкторе класса
// Какое значение будет в переменной person после выполнения следующего кода:

// Ваш ответ
// {name: 'Иван',age:25,job:'web developer'}

// const a = /abc/;

// typeof a = ?

 

// Ваш ответ
// "RegExp"
// Метод array.map()…
// Ваш ответ
// Создает новый массив, отсортированный согласно переданному направлению сортировки
// Что выведется в консоль?
// Ваш ответ
// 10
// const a = undefined;

// Какое сравнение даст истину?

// Ваш ответ
// a === undefined
// Что вернет следующий код:
// Ваш ответ
// привет, Ge
// Как получить последний день месяца переданной даты?
// Ваш ответ
// new Date(date.getFullYear(),date.getMonth()+1,-1)
// const a = /abc/;

// typeof a + 1 = ?

// Ваш ответ
// "object"
// Как отсортировать массив объектов?
// Ваш ответ
// Вызывается метод sort, в который передается имя свойства для сортировки
// Что выведет в консоли следующий код:

// Ваш ответ
// 6

// Какие методы передачи данных используются при запросах?
// Ваш ответ
// GET и POST
// Какое объявление переменной правильное?
// Ваш ответ
// let from = 1;
// Ваш ответ
// let exports = 1;


// Неправильные ответы: 4
// Как будет происходить отображение страницы браузером, если внутри тега <body> будет тег <script src="main.js"></script>. При этом HTML-элементы есть и до, и после тега <script>

// Ваш ответ
// Браузер, когда встретит тег <script>, начнет загрузку и выполнение файла main.js, одновременно загружая оставшиеся HTML-элементы.

// Обязательно ли выделять блок кода условного оператора фигурными скобками?
// Ваш ответ
// Не обязательно.
// Какой тип данных используется для хранения отдельных символов?

// Ваш ответ
// Нужно использовать специальный тип – symbol;

// Как работает тернарный оператор, если одно из выражений заменить на управляющую конструкцию (например, continue или return)?

// Ваш ответ
// Если это выражение вычисляется в результате выполнения условия, то будет ошибка.


// Каковы основные свойства алгоритма?
// Ваш ответ
// функциональность, вложенность, ясность
// Как выглядит оператор декремента в языке JavaScript?
// Ваш ответ
// ++
// Закончите утверждение: все данные, с точки зрения программы, можно разделить на:

// Ваш ответ
// двоичные и шестнадцатеричные

// Как выглядит функция преобразования текста в вещественное число в языке JavaScript?
// Ваш ответ
// parseInt
// Как называется базовая единица измерения информации?

// Ваш ответ
// байт